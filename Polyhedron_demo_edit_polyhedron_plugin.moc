/****************************************************************************
** Meta object code from reading C++ file 'Polyhedron_demo_edit_polyhedron_plugin.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#include <QtCore/qplugin.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'Polyhedron_demo_edit_polyhedron_plugin.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_Polyhedron_demo_edit_polyhedron_plugin_t {
    QByteArrayData data[26];
    char stringdata0[741];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Polyhedron_demo_edit_polyhedron_plugin_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Polyhedron_demo_edit_polyhedron_plugin_t qt_meta_stringdata_Polyhedron_demo_edit_polyhedron_plugin = {
    {
QT_MOC_LITERAL(0, 0, 38), // "Polyhedron_demo_edit_polyhedr..."
QT_MOC_LITERAL(1, 39, 30), // "on_actionDeformation_triggered"
QT_MOC_LITERAL(2, 70, 0), // ""
QT_MOC_LITERAL(3, 71, 32), // "on_AddCtrlVertPushButton_clicked"
QT_MOC_LITERAL(4, 104, 33), // "on_PrevCtrlVertPushButton_cli..."
QT_MOC_LITERAL(5, 138, 33), // "on_NextCtrlVertPushButton_cli..."
QT_MOC_LITERAL(6, 172, 38), // "on_SelectAllVerticesPushButto..."
QT_MOC_LITERAL(7, 211, 35), // "on_DeleteCtrlVertPushButton_c..."
QT_MOC_LITERAL(8, 247, 34), // "on_ApplyAndClosePushButton_cl..."
QT_MOC_LITERAL(9, 282, 29), // "on_ClearROIPushButton_clicked"
QT_MOC_LITERAL(10, 312, 31), // "on_ShowROICheckBox_stateChanged"
QT_MOC_LITERAL(11, 344, 5), // "state"
QT_MOC_LITERAL(12, 350, 36), // "on_ShowAsSphereCheckBox_state..."
QT_MOC_LITERAL(13, 387, 40), // "on_ActivatePivotingCheckBox_s..."
QT_MOC_LITERAL(14, 428, 30), // "on_OverwritePushButton_clicked"
QT_MOC_LITERAL(15, 459, 28), // "on_SaveROIPushButton_clicked"
QT_MOC_LITERAL(16, 488, 28), // "on_ReadROIPushButton_clicked"
QT_MOC_LITERAL(17, 517, 30), // "dock_widget_visibility_changed"
QT_MOC_LITERAL(18, 548, 7), // "visible"
QT_MOC_LITERAL(19, 556, 44), // "on_Select_isolated_components..."
QT_MOC_LITERAL(20, 601, 29), // "on_Get_minimum_button_clicked"
QT_MOC_LITERAL(21, 631, 31), // "on_BrushSpinBoxCtrlVert_changed"
QT_MOC_LITERAL(22, 663, 26), // "on_BrushSpinBoxRoi_changed"
QT_MOC_LITERAL(23, 690, 25), // "on_ROIRadioButton_toggled"
QT_MOC_LITERAL(24, 716, 16), // "new_item_created"
QT_MOC_LITERAL(25, 733, 7) // "item_id"

    },
    "Polyhedron_demo_edit_polyhedron_plugin\0"
    "on_actionDeformation_triggered\0\0"
    "on_AddCtrlVertPushButton_clicked\0"
    "on_PrevCtrlVertPushButton_clicked\0"
    "on_NextCtrlVertPushButton_clicked\0"
    "on_SelectAllVerticesPushButton_clicked\0"
    "on_DeleteCtrlVertPushButton_clicked\0"
    "on_ApplyAndClosePushButton_clicked\0"
    "on_ClearROIPushButton_clicked\0"
    "on_ShowROICheckBox_stateChanged\0state\0"
    "on_ShowAsSphereCheckBox_stateChanged\0"
    "on_ActivatePivotingCheckBox_stateChanged\0"
    "on_OverwritePushButton_clicked\0"
    "on_SaveROIPushButton_clicked\0"
    "on_ReadROIPushButton_clicked\0"
    "dock_widget_visibility_changed\0visible\0"
    "on_Select_isolated_components_button_clicked\0"
    "on_Get_minimum_button_clicked\0"
    "on_BrushSpinBoxCtrlVert_changed\0"
    "on_BrushSpinBoxRoi_changed\0"
    "on_ROIRadioButton_toggled\0new_item_created\0"
    "item_id"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Polyhedron_demo_edit_polyhedron_plugin[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      21,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  119,    2, 0x0a /* Public */,
       3,    0,  120,    2, 0x0a /* Public */,
       4,    0,  121,    2, 0x0a /* Public */,
       5,    0,  122,    2, 0x0a /* Public */,
       6,    0,  123,    2, 0x0a /* Public */,
       7,    0,  124,    2, 0x0a /* Public */,
       8,    0,  125,    2, 0x0a /* Public */,
       9,    0,  126,    2, 0x0a /* Public */,
      10,    1,  127,    2, 0x0a /* Public */,
      12,    1,  130,    2, 0x0a /* Public */,
      13,    1,  133,    2, 0x0a /* Public */,
      14,    0,  136,    2, 0x0a /* Public */,
      15,    0,  137,    2, 0x0a /* Public */,
      16,    0,  138,    2, 0x0a /* Public */,
      17,    1,  139,    2, 0x0a /* Public */,
      19,    0,  142,    2, 0x0a /* Public */,
      20,    0,  143,    2, 0x0a /* Public */,
      21,    1,  144,    2, 0x0a /* Public */,
      22,    1,  147,    2, 0x0a /* Public */,
      23,    1,  150,    2, 0x0a /* Public */,
      24,    1,  153,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int,   11,
    QMetaType::Void, QMetaType::Int,   11,
    QMetaType::Void, QMetaType::Int,   11,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Bool,   18,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void, QMetaType::Bool,    2,
    QMetaType::Void, QMetaType::Int,   25,

       0        // eod
};

void Polyhedron_demo_edit_polyhedron_plugin::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Polyhedron_demo_edit_polyhedron_plugin *_t = static_cast<Polyhedron_demo_edit_polyhedron_plugin *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->on_actionDeformation_triggered(); break;
        case 1: _t->on_AddCtrlVertPushButton_clicked(); break;
        case 2: _t->on_PrevCtrlVertPushButton_clicked(); break;
        case 3: _t->on_NextCtrlVertPushButton_clicked(); break;
        case 4: _t->on_SelectAllVerticesPushButton_clicked(); break;
        case 5: _t->on_DeleteCtrlVertPushButton_clicked(); break;
        case 6: _t->on_ApplyAndClosePushButton_clicked(); break;
        case 7: _t->on_ClearROIPushButton_clicked(); break;
        case 8: _t->on_ShowROICheckBox_stateChanged((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 9: _t->on_ShowAsSphereCheckBox_stateChanged((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 10: _t->on_ActivatePivotingCheckBox_stateChanged((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 11: _t->on_OverwritePushButton_clicked(); break;
        case 12: _t->on_SaveROIPushButton_clicked(); break;
        case 13: _t->on_ReadROIPushButton_clicked(); break;
        case 14: _t->dock_widget_visibility_changed((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 15: _t->on_Select_isolated_components_button_clicked(); break;
        case 16: _t->on_Get_minimum_button_clicked(); break;
        case 17: _t->on_BrushSpinBoxCtrlVert_changed((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 18: _t->on_BrushSpinBoxRoi_changed((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 19: _t->on_ROIRadioButton_toggled((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 20: _t->new_item_created((*reinterpret_cast< int(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject Polyhedron_demo_edit_polyhedron_plugin::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_Polyhedron_demo_edit_polyhedron_plugin.data,
      qt_meta_data_Polyhedron_demo_edit_polyhedron_plugin,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *Polyhedron_demo_edit_polyhedron_plugin::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Polyhedron_demo_edit_polyhedron_plugin::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_Polyhedron_demo_edit_polyhedron_plugin.stringdata0))
        return static_cast<void*>(const_cast< Polyhedron_demo_edit_polyhedron_plugin*>(this));
    if (!strcmp(_clname, "Polyhedron_demo_plugin_helper"))
        return static_cast< Polyhedron_demo_plugin_helper*>(const_cast< Polyhedron_demo_edit_polyhedron_plugin*>(this));
    if (!strcmp(_clname, "com.geometryfactory.PolyhedronDemo.PluginInterface/1.0"))
        return static_cast< Polyhedron_demo_plugin_interface*>(const_cast< Polyhedron_demo_edit_polyhedron_plugin*>(this));
    return QObject::qt_metacast(_clname);
}

int Polyhedron_demo_edit_polyhedron_plugin::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 21)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 21;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 21)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 21;
    }
    return _id;
}

QT_PLUGIN_METADATA_SECTION const uint qt_section_alignment_dummy = 42;

#ifdef QT_NO_DEBUG

QT_PLUGIN_METADATA_SECTION
static const unsigned char qt_pluginMetaData[] = {
    'Q', 'T', 'M', 'E', 'T', 'A', 'D', 'A', 'T', 'A', ' ', ' ',
    'q',  'b',  'j',  's',  0x01, 0x00, 0x00, 0x00,
    0xd4, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0xc0, 0x00, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00,
    0x03, 0x00, 'I',  'I',  'D',  0x00, 0x00, 0x00,
    '6',  0x00, 'c',  'o',  'm',  '.',  'g',  'e', 
    'o',  'm',  'e',  't',  'r',  'y',  'f',  'a', 
    'c',  't',  'o',  'r',  'y',  '.',  'P',  'o', 
    'l',  'y',  'h',  'e',  'd',  'r',  'o',  'n', 
    'D',  'e',  'm',  'o',  '.',  'P',  'l',  'u', 
    'g',  'i',  'n',  'I',  'n',  't',  'e',  'r', 
    'f',  'a',  'c',  'e',  '/',  '1',  '.',  '0', 
    0x1b, 0x0c, 0x00, 0x00, 0x09, 0x00, 'c',  'l', 
    'a',  's',  's',  'N',  'a',  'm',  'e',  0x00,
    '&',  0x00, 'P',  'o',  'l',  'y',  'h',  'e', 
    'd',  'r',  'o',  'n',  '_',  'd',  'e',  'm', 
    'o',  '_',  'e',  'd',  'i',  't',  '_',  'p', 
    'o',  'l',  'y',  'h',  'e',  'd',  'r',  'o', 
    'n',  '_',  'p',  'l',  'u',  'g',  'i',  'n', 
    ':',  0xa0, 0xa0, 0x00, 0x07, 0x00, 'v',  'e', 
    'r',  's',  'i',  'o',  'n',  0x00, 0x00, 0x00,
    0x11, 0x00, 0x00, 0x00, 0x05, 0x00, 'd',  'e', 
    'b',  'u',  'g',  0x00, 0x95, 0x16, 0x00, 0x00,
    0x08, 0x00, 'M',  'e',  't',  'a',  'D',  'a', 
    't',  'a',  0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00,
    'P',  0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00,
    0x88, 0x00, 0x00, 0x00
};

#else // QT_NO_DEBUG

QT_PLUGIN_METADATA_SECTION
static const unsigned char qt_pluginMetaData[] = {
    'Q', 'T', 'M', 'E', 'T', 'A', 'D', 'A', 'T', 'A', ' ', ' ',
    'q',  'b',  'j',  's',  0x01, 0x00, 0x00, 0x00,
    0xd4, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
    0xc0, 0x00, 0x00, 0x00, 0x1b, 0x03, 0x00, 0x00,
    0x03, 0x00, 'I',  'I',  'D',  0x00, 0x00, 0x00,
    '6',  0x00, 'c',  'o',  'm',  '.',  'g',  'e', 
    'o',  'm',  'e',  't',  'r',  'y',  'f',  'a', 
    'c',  't',  'o',  'r',  'y',  '.',  'P',  'o', 
    'l',  'y',  'h',  'e',  'd',  'r',  'o',  'n', 
    'D',  'e',  'm',  'o',  '.',  'P',  'l',  'u', 
    'g',  'i',  'n',  'I',  'n',  't',  'e',  'r', 
    'f',  'a',  'c',  'e',  '/',  '1',  '.',  '0', 
    0x15, 0x0c, 0x00, 0x00, 0x08, 0x00, 'M',  'e', 
    't',  'a',  'D',  'a',  't',  'a',  0x00, 0x00,
    0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x9b, 0x0f, 0x00, 0x00,
    0x09, 0x00, 'c',  'l',  'a',  's',  's',  'N', 
    'a',  'm',  'e',  0x00, '&',  0x00, 'P',  'o', 
    'l',  'y',  'h',  'e',  'd',  'r',  'o',  'n', 
    '_',  'd',  'e',  'm',  'o',  '_',  'e',  'd', 
    'i',  't',  '_',  'p',  'o',  'l',  'y',  'h', 
    'e',  'd',  'r',  'o',  'n',  '_',  'p',  'l', 
    'u',  'g',  'i',  'n',  '1',  0x00, 0x00, 0x00,
    0x05, 0x00, 'd',  'e',  'b',  'u',  'g',  0x00,
    ':',  0xa0, 0xa0, 0x00, 0x07, 0x00, 'v',  'e', 
    'r',  's',  'i',  'o',  'n',  0x00, 0x00, 0x00,
    0x0c, 0x00, 0x00, 0x00, 'P',  0x00, 0x00, 0x00,
    'l',  0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00,
    0xb0, 0x00, 0x00, 0x00
};
#endif // QT_NO_DEBUG

QT_MOC_EXPORT_PLUGIN(Polyhedron_demo_edit_polyhedron_plugin, Polyhedron_demo_edit_polyhedron_plugin)

QT_END_MOC_NAMESPACE
